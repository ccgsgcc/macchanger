[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "ModelSerializer",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "subprocess,os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess.os",
        "description": "subprocess.os",
        "detail": "subprocess.os",
        "documentation": {}
    },
    {
        "label": "ArgumentParser",
        "importPath": "argparse",
        "description": "argparse",
        "isExtraImport": true,
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django_app.app.asgi",
        "description": "django_app.app.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "django_app.app.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-#fq)1w$15*+pblt!4b$7au@pyjpk+9cn_dfgv(x201az+jp9v!'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = False\nALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-#fq)1w$15*+pblt!4b$7au@pyjpk+9cn_dfgv(x201az+jp9v!'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = False\nALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "DEBUG = False\nALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['*']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'base',",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'base',\n    'corsheaders',\n    'rest_framework',",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "ROOT_URLCONF = 'app.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            BASE_DIR / 'templates'\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            BASE_DIR / 'templates'\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "WSGI_APPLICATION = 'app.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'logotips/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'logotips/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'logotips/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nMEDIA_ROOT = BASE_DIR / 'static/logotips'",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'logotips/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nMEDIA_ROOT = BASE_DIR / 'static/logotips'\n# Default primary key field type",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nMEDIA_URL = 'logotips/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nMEDIA_ROOT = BASE_DIR / 'static/logotips'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCORS_ALLOW_ALL_ORIGINS = True",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "MEDIA_URL = 'logotips/'\nSTATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nMEDIA_ROOT = BASE_DIR / 'static/logotips'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCORS_ALLOW_ALL_ORIGINS = True\nCORS_ALLOWED_ORIGINS = [",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / 'static'\n]\nMEDIA_ROOT = BASE_DIR / 'static/logotips'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCORS_ALLOW_ALL_ORIGINS = True\nCORS_ALLOWED_ORIGINS = [\n    # \"https://example.com\",",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'static/logotips'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCORS_ALLOW_ALL_ORIGINS = True\nCORS_ALLOWED_ORIGINS = [\n    # \"https://example.com\",\n]",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nCORS_ALLOW_ALL_ORIGINS = True\nCORS_ALLOWED_ORIGINS = [\n    # \"https://example.com\",\n]",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_ALL_ORIGINS",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "CORS_ALLOW_ALL_ORIGINS = True\nCORS_ALLOWED_ORIGINS = [\n    # \"https://example.com\",\n]",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "django_app.app.settings",
        "description": "django_app.app.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    # \"https://example.com\",\n]",
        "detail": "django_app.app.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django_app.app.urls",
        "description": "django_app.app.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('base.urls')),\n    path('api/', include('base.api.urls')),\n]\nhandler404 = \"app.views.page_not_found_view\"\nurlpatterns += static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)",
        "detail": "django_app.app.urls",
        "documentation": {}
    },
    {
        "label": "handler404",
        "kind": 5,
        "importPath": "django_app.app.urls",
        "description": "django_app.app.urls",
        "peekOfCode": "handler404 = \"app.views.page_not_found_view\"\nurlpatterns += static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)",
        "detail": "django_app.app.urls",
        "documentation": {}
    },
    {
        "label": "page_not_found_view",
        "kind": 2,
        "importPath": "django_app.app.views",
        "description": "django_app.app.views",
        "peekOfCode": "def page_not_found_view(request, exception):\n   return render(request, 'page-not-found.html', status=404)",
        "detail": "django_app.app.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "django_app.app.wsgi",
        "description": "django_app.app.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "django_app.app.wsgi",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "django_app.base.api.serializer",
        "description": "django_app.base.api.serializer",
        "peekOfCode": "class UserSerializer(ModelSerializer):\n   class Meta:\n      model = Company\n      fields = '__all__'\n   def to_representation(self, instance):\n      return super().to_representation(instance)   \n      data = {\n         'slug': \"slug\"\n      }\n      return data",
        "detail": "django_app.base.api.serializer",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django_app.base.api.urls",
        "description": "django_app.base.api.urls",
        "peekOfCode": "urlpatterns = [\n   path('', views.usersView, name='users'),\n   path('<str:slug>', views.userView, name='user'),\n]",
        "detail": "django_app.base.api.urls",
        "documentation": {}
    },
    {
        "label": "slugGenerate",
        "kind": 2,
        "importPath": "django_app.base.api.utils",
        "description": "django_app.base.api.utils",
        "peekOfCode": "def slugGenerate(name):\n   slug =  (''.join(random.choice(name.replace(\" \", \"_\")) for i in range(30))).lower()\n   return slug\ndef requestCheck(a):\n   if a != None:\n      print(a)\n      return a\n   else:\n      return \"\"",
        "detail": "django_app.base.api.utils",
        "documentation": {}
    },
    {
        "label": "requestCheck",
        "kind": 2,
        "importPath": "django_app.base.api.utils",
        "description": "django_app.base.api.utils",
        "peekOfCode": "def requestCheck(a):\n   if a != None:\n      print(a)\n      return a\n   else:\n      return \"\"",
        "detail": "django_app.base.api.utils",
        "documentation": {}
    },
    {
        "label": "usersView",
        "kind": 2,
        "importPath": "django_app.base.api.views",
        "description": "django_app.base.api.views",
        "peekOfCode": "def usersView(request):\n   # ! CREATE NEW USER\n   if request.method == 'POST':\n      name = request.POST.get('name')      \n      photo = \"\"\n      if 'ava' in request.FILES:\n         photo = request.FILES['ava']\n      else: \n         photo = ''         \n      form  = Company.objects.create(",
        "detail": "django_app.base.api.views",
        "documentation": {}
    },
    {
        "label": "userView",
        "kind": 2,
        "importPath": "django_app.base.api.views",
        "description": "django_app.base.api.views",
        "peekOfCode": "def userView(request, slug):\n   user = get_object_or_404(Company, slug=slug)\n   if user:\n      #! GET ONE USER\n      if request.method == 'GET':\n         # return Response(UserSerializer(user, many=False).data, status=200)\n         return Response({\n            'slug': user.slug,\n            'username': user.name,\n            'title': user.title,",
        "detail": "django_app.base.api.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django_app.base.migrations.0001_initial",
        "description": "django_app.base.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Company',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('slug', models.CharField(default='', max_length=100, unique=True)),",
        "detail": "django_app.base.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django_app.base.migrations.0002_rename_username_company_company_name",
        "description": "django_app.base.migrations.0002_rename_username_company_company_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('base', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='company',\n            old_name='username',\n            new_name='company_name',\n        ),",
        "detail": "django_app.base.migrations.0002_rename_username_company_company_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django_app.base.migrations.0003_rename_company_companymodel",
        "description": "django_app.base.migrations.0003_rename_company_companymodel",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('base', '0002_rename_username_company_company_name'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Company',\n            new_name='CompanyModel',\n        ),\n    ]",
        "detail": "django_app.base.migrations.0003_rename_company_companymodel",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django_app.base.migrations.0004_rename_companymodel_company",
        "description": "django_app.base.migrations.0004_rename_companymodel_company",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('base', '0003_rename_company_companymodel'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='CompanyModel',\n            new_name='Company',\n        ),\n    ]",
        "detail": "django_app.base.migrations.0004_rename_companymodel_company",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django_app.base.migrations.0005_rename_company_name_company_username",
        "description": "django_app.base.migrations.0005_rename_company_name_company_username",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('base', '0004_rename_companymodel_company'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='company',\n            old_name='company_name',\n            new_name='username',\n        ),",
        "detail": "django_app.base.migrations.0005_rename_company_name_company_username",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "django_app.base.migrations.0006_rename_username_company_name",
        "description": "django_app.base.migrations.0006_rename_username_company_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('base', '0005_rename_company_name_company_username'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='company',\n            old_name='username',\n            new_name='name',\n        ),",
        "detail": "django_app.base.migrations.0006_rename_username_company_name",
        "documentation": {}
    },
    {
        "label": "CompanyAdmin",
        "kind": 6,
        "importPath": "django_app.base.admin",
        "description": "django_app.base.admin",
        "peekOfCode": "class CompanyAdmin(admin.ModelAdmin):\n   list_display = ('slug', 'name', 'email', 'number', 'updated', 'created')\n   prepopulated_fields = {'slug': ('name',)}\nadmin.site.register(Company, CompanyAdmin)",
        "detail": "django_app.base.admin",
        "documentation": {}
    },
    {
        "label": "BaseConfig",
        "kind": 6,
        "importPath": "django_app.base.apps",
        "description": "django_app.base.apps",
        "peekOfCode": "class BaseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'base'",
        "detail": "django_app.base.apps",
        "documentation": {}
    },
    {
        "label": "Company",
        "kind": 6,
        "importPath": "django_app.base.models",
        "description": "django_app.base.models",
        "peekOfCode": "class Company(models.Model):\n   name = models.CharField(max_length=50)\n   slug = models.CharField(max_length=100, unique=True, default='')\n   title = models.CharField(max_length=50, blank=True)\n   number = models.CharField(max_length=20, blank=True)\n   email = models.EmailField(max_length=100, blank=True)\n   ava = models.ImageField(upload_to='avatars', blank=True)\n   location = models.CharField(max_length=164, blank=True)\n   facebook = models.CharField(max_length=1000, blank=True)\n   instagram = models.CharField(max_length=1000, blank=True)",
        "detail": "django_app.base.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "django_app.base.urls",
        "description": "django_app.base.urls",
        "peekOfCode": "urlpatterns = [\n   path(\"company/<str:slug>/\", views.showCompany, name=\"company\")\n]",
        "detail": "django_app.base.urls",
        "documentation": {}
    },
    {
        "label": "showCompany",
        "kind": 2,
        "importPath": "django_app.base.views",
        "description": "django_app.base.views",
        "peekOfCode": "def showCompany(request, slug): \n   company = Company.objects.get(slug = slug)\n   return render(request, 'main.html', {'company': company})",
        "detail": "django_app.base.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "django_app.manage",
        "description": "django_app.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "django_app.manage",
        "documentation": {}
    },
    {
        "label": "macchange",
        "kind": 2,
        "importPath": "macchanger",
        "description": "macchanger",
        "peekOfCode": "def macchange():\n    if ((args.iface) and (args.newmac)):\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"down\"])\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"hw\",\"ether\",args.newmac])\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"up\"])\n        subprocess.call([\"macchanger\",\"-s\",args.iface])\n    elif((args.iface) and (args.Random)):\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"down\"])\n        subprocess.call([\"sudo\",\"macchanger\",\"-r\",args.iface])\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"up\"])",
        "detail": "macchanger",
        "documentation": {}
    },
    {
        "label": "parser",
        "kind": 5,
        "importPath": "macchanger",
        "description": "macchanger",
        "peekOfCode": "parser = ArgumentParser(description=\"macchanger [Option] \",usage=\"python3 macchanger --help\",epilog=\"[ Manual Mode ] python3 macchanger.py -i [interface] -m [XX:XX:XX:XX:XX:XX]\")\nrparser = parser.add_argument_group(\"Required Arquments:\")\nrparser.add_argument('-i','--interface',dest=\"iface\",metavar='',type=str,help=\"Interface you want to change MAC\")\nrparser.add_argument('-m','--mac',dest=\"newmac\",metavar='',type=str,help=\"MAC Address to change [Manual Mode only] \")\nparser.add_argument('-s','--show',help=\"Show available interface and exit\",action=\"store_true\")\nparser.add_argument('-R','--Random',help=\"Automaticaly assign Random MAC\",action=\"store_true\")\nparser.add_argument('-r','--reset',help=\"Reset to Original MAC\",action=\"store_true\")\nargs = parser.parse_args()\ndef macchange():\n    if ((args.iface) and (args.newmac)):",
        "detail": "macchanger",
        "documentation": {}
    },
    {
        "label": "rparser",
        "kind": 5,
        "importPath": "macchanger",
        "description": "macchanger",
        "peekOfCode": "rparser = parser.add_argument_group(\"Required Arquments:\")\nrparser.add_argument('-i','--interface',dest=\"iface\",metavar='',type=str,help=\"Interface you want to change MAC\")\nrparser.add_argument('-m','--mac',dest=\"newmac\",metavar='',type=str,help=\"MAC Address to change [Manual Mode only] \")\nparser.add_argument('-s','--show',help=\"Show available interface and exit\",action=\"store_true\")\nparser.add_argument('-R','--Random',help=\"Automaticaly assign Random MAC\",action=\"store_true\")\nparser.add_argument('-r','--reset',help=\"Reset to Original MAC\",action=\"store_true\")\nargs = parser.parse_args()\ndef macchange():\n    if ((args.iface) and (args.newmac)):\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"down\"])",
        "detail": "macchanger",
        "documentation": {}
    },
    {
        "label": "args",
        "kind": 5,
        "importPath": "macchanger",
        "description": "macchanger",
        "peekOfCode": "args = parser.parse_args()\ndef macchange():\n    if ((args.iface) and (args.newmac)):\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"down\"])\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"hw\",\"ether\",args.newmac])\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"up\"])\n        subprocess.call([\"macchanger\",\"-s\",args.iface])\n    elif((args.iface) and (args.Random)):\n        subprocess.call([\"sudo\",\"ifconfig\",args.iface,\"down\"])\n        subprocess.call([\"sudo\",\"macchanger\",\"-r\",args.iface])",
        "detail": "macchanger",
        "documentation": {}
    }
]